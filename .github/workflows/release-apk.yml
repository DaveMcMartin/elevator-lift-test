name: Build & Attach Signed APK

on:
  release:
    types: [created]

jobs:
  build-android:
    runs-on: ubuntu-latest
    defaults:
      run:
        shell: bash

    steps:
      - name: Check out repository
        uses: actions/checkout@v4

      - name: Set up Node.js
        uses: actions/setup-node@v4
        with:
          node-version: "18"
          cache: "npm"

      - name: Install npm dependencies
        run: npm ci

      - name: Install Expo CLI globally
        run: npm install --global expo-cli

      - name: Expo -> prebuild Android
        run: |
          expo prebuild --clean --platform android

      - name: Set up Java (Zulu JDK 11)
        uses: actions/setup-java@v4
        with:
          distribution: "zulu"
          java-version: "17"

      - name: Install Android keystore
        run: |
          mkdir -p android/app
          echo "$ANDROID_KEYSTORE_BASE64" | base64 -d > android/app/release-key.jks
        env:
          ANDROID_KEYSTORE_BASE64: ${{ secrets.ANDROID_KEYSTORE_BASE64 }}

      - name: Configure Gradle signing properties
        run: |
          echo "MYAPP_RELEASE_STORE_FILE=release-key.jks"       >> android/gradle.properties
          echo "MYAPP_RELEASE_KEY_ALIAS=${ANDROID_KEY_ALIAS}"   >> android/gradle.properties
          echo "MYAPP_RELEASE_STORE_PASSWORD=${ANDROID_KEYSTORE_PASSWORD}" >> android/gradle.properties
          echo "MYAPP_RELEASE_KEY_PASSWORD=${ANDROID_KEY_PASSWORD}"       >> android/gradle.properties
        env:
          ANDROID_KEY_ALIAS: ${{ secrets.ANDROID_KEY_ALIAS }}
          ANDROID_KEYSTORE_PASSWORD: ${{ secrets.ANDROID_KEYSTORE_PASSWORD }}
          ANDROID_KEY_PASSWORD: ${{ secrets.ANDROID_KEY_PASSWORD }}

      - name: Build signed Android APK via Gradle
        run: |
          cd android
          ./gradlew clean
          # this will produce: android/app/build/outputs/apk/release/app-release.apk
          ./gradlew assembleRelease

      - name: Verify APK signature
        run: |
          jarsigner -verify -verbose -certs android/app/build/outputs/apk/release/app-release.apk

      - name: Download existing release metadata
        id: get_release
        uses: softprops/action-gh-release@v1
        with:
          tag_name: ${{ github.event.release.tag_name }}
          draft: false
          prerelease: false
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}

      - name: Upload APK as a release asset
        uses: softprops/action-gh-release@v1
        with:
          files: android/app/build/outputs/apk/release/app-release.apk
          upload_url: ${{ steps.get_release.outputs.upload_url }}
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
